================================= OOP INTRO NOTES
-- UP TO NOW --
 - using functions/methods to group together steps for the program to work
-- DEFINITION --
  OOP - Object-oriented programming
  - A programming paradigm where state (data/properties) and behavior (functionality/methods)
    are grouped together (often into objects)
  - Objects in Java are created from classes (a blueprint for an object/instance)
-- ADVANTAGES OF OOP --
  Programming in an Object-oriented way can be used to develop code with a clearer and more modular organization in the following ways:
  - implementation details can be abstracted away making code more readable (Abstraction)
  - restriction of access to various levels of abstraction preventing data inconsistencies (Encapsulation)
  - duplication is minimized through inheritance hierarchies (Inheritance)
  - flexible code where multiple implementations may be swapped out behind a common interface (Polymorphism)
-- THE FOUR PILLARS OF OOP --
  1. Abstraction - keep it clean
  2. Encapsulation - keep it contained
  3. Inheritance - keep it hierarchical (DRY)
  4. Polymorphism - keep it versatile
  https://medium.com/@hamzzza.ahmed95/four-pillars-of-object-oriented-programming-oop-e8d7822aa219
  Today we will focus on Abstraction and Encapsulation.
-- CONCEPTS COVERED --
  - how to create custom classes and objects from these classes
  - defining and using instance and static fields
  - how to control class constructors
  - using the “this” keyword
  - controlling encapsulation with visibility modifiers (edited)